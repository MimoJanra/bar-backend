stages:
  - build
  - deploy

variables:
  IMAGE_NAME: "registry.gitlab.com/glawk/bar-backend"
  IMAGE_VERSION: "$CI_COMMIT_SHORT_SHA"

before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build_image_latest:
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $TEST_BUILD == "true"
      changes:
        - src/**/*
        - Dockerfile
        - build.gradle.kts
        - settings.gradle.kts
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest 
        --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA 
        --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

deploy:
  stage: deploy
  image: alpine
  before_script:
    # install envsubst and ssh-add
    - apk add gettext openssh-client
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $TEST_BUILD == "true"
  script:
    # create the new docker-compose.yml
    - envsubst < docker-compose.tmpl > docker-compose.yml
    # start ssh-agent and import ssh private key
    - eval `ssh-agent`
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    # add server to list of known hosts
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - touch ~/.ssh/known_hosts
    - chmod 600 ~/.ssh/known_hosts
    - echo $SSH_HOST_KEY >> ~/.ssh/known_hosts
    # upload docker-compose to the server
    - scp docker-compose.yml bartender@31.129.96.107:/home/bartender/
    # upload nginx configuration to the server
    - scp nginx/nginx.conf bartender@31.129.96.107:/home/bartender/nginx/
    # docker login and restart services, reload nginx conf
    - ssh bartender@31.129.96.107 "cd /home/bartender; 
        docker login -u $CI_REGISTRY_USER 
          -p $CI_REGISTRY_PASSWORD $CI_REGISTRY;
        docker compose up -d;
        docker exec -i nginx_reverse nginx -s reload"

